<?xml version="1.0" encoding="UTF-8"?>

<project name="Application" default="build">
  <target name="build"
   depends="prepare,lint,composer,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit, phpcb"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit, phpcb"/>

 <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/_reports"/>
 </target>

 <target name="prepare" depends="clean" description="Prepare for build">
  <mkdir dir="${basedir}/_reports"/>
  <exec executable="bash" failonerror="true">
      <arg value="/usr/local/jenkins/jobs/update.sh" />
  </exec>
 </target>

 <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/../src">
    <include name="**/*.php" />
    <modified />
   </fileset>

  </apply>
 </target>

 <target name="composer" description="Installing dependencies">
<!--     <exec executable="wget" failonerror="true">
      <arg value="-nc" />
      <arg value="http://getcomposer.org/composer.phar" />
    </exec> -->
    <exec executable="bash" failonerror="true">
      <arg value="composer.sh" />
    </exec>
  </target>


 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/_reports/phploc.csv" />
   <arg path="${basedir}/../src" />
  </exec>
 </target>

 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--configuration=../../../pdepend.xml" />
   <arg value="--jdepend-xml=${basedir}/_reports/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/_reports/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/_reports/overview-pyramid.svg" />
   <arg path="${basedir}/../src/Application" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/../src" />
   <arg value="text" />
   <arg value="${basedir}/../../../phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/../src" />
   <arg value="xml" />
   <arg value="${basedir}/../../../phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/_reports/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="- -standard=${basedir}/../../../phpcs.xml" /> 
   <arg value="-v" />
   <arg path="${basedir}/../src" />
  </exec>
 </target>

 <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/_reports/checkstyle.xml" />
   <arg value="-v" />
   <!-- <arg value="- -standard=${basedir}/phpcs.xml" /> -->
   <arg path="${basedir}/../src" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/_reports/pmd-cpd.xml" />
   <arg path="${basedir}/../src" />
  </exec>
 </target>

 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox"/>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="true">
   <env key="ENV" value="jenkins"/>
   <arg value="-vc" /> 
   <arg path="${basedir}/phpunit.xml" />
  </exec> 
 </target>
 
 <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/_reports" />
   <arg value="--source" />
   <arg path="${basedir}/../src" />
   <arg value="--output" />
   <arg path="${basedir}/_reports/code-browser" />
  </exec>
 </target>
</project>